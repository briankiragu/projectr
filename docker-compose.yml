version: "3"

services:
  mysql:
    image: mysql:latest
    container_name: db
    restart: always
    command: --binlog-format=ROW --authentication-policy=mysql_native_password
    ports:
      - "${DB_PORT:-3306}:3306"
      - "33060:33060"
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MYSQL_USER: "${DB_USER}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_DATABASE: "${DB_DATABASE}"
    networks:
      - projectr

  directus:
    image: directus/directus:latest
    container_name: admin
    restart: always
    ports:
      - "${DIRECTUS_PORT:-8055}:8055"
    volumes:
      - directus_data:/directus/extensions
    environment:
      DB_CLIENT: "mysql"
      DB_HOST: db
      DB_PORT: "${DB_PORT}"
      DB_DATABASE: "${DB_DATABASE}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
      KEY: "${DIRECTUS_KEY}"
      SECRET: "${DIRECTUS_SECRET}"
      ADMIN_EMAIL: "${DIRECTUS_ADMIN_EMAIL}"
      ADMIN_PASSWORD: "${DIRECTUS_ADMIN_PASSWORD}"
      WEBSOCKETS_ENABLED: "true"
    networks:
      - projectr
    depends_on:
      - mysql

  meilisearch:
    image: getmeili/meilisearch:latest
    container_name: search
    restart: always
    ports:
      - "${MEILI_PORT:-7700}:7700"
    volumes:
      - meili_data:/meili_data
    environment:
      MEILI_ENV: "${MEILI_ENV:-development}"
      MEILI_MASTER_KEY: "${VITE_MEILI_MASTER_KEY}"
    networks:
      - projectr

  meilisync:
    image: long2ice/meilisync:latest
    container_name: meilisync
    restart: always
    volumes:
      - meilisync_data:/meilisync
      - ./docker/meilisync/config.yml:/meilisync/config.yml
    networks:
      - projectr
    depends_on:
      - mysql
      - meilisearch

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - certbot_data:/var/www/certbot:rw
      - ./docker/certbot/conf:/etc/letsencrypt:rw

  nginx:
    image: nginx:alpine
    container_name: proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certbot_data:/var/www/certbot:ro
      - ./docker/certbot/conf:/etc/nginx/ssl:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - projectr
    depends_on:
      - directus
      - meilisearch
      - certbot
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      timeout: 10s
      retries: 3

networks:
  projectr:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  directus_data:
    driver: local
  meili_data:
    driver: local
  meilisync_data:
    driver: local
  certbot_data:
    driver: local
