services:
  mysql:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    command: --authentication-policy=mysql_native_password --log-bin=mysql-bin --binlog-format=ROW
    ports:
      - "${DB_PORT:-3306}:3306"
      - "33060:33060"
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MYSQL_USER: "${DB_USER}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_DATABASE: "${DB_DATABASE}"
    volumes:
      - mysql_data:/var/lib/mysql:rw
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - projectr

  redis:
    image: redis:6.2-alpine
    container_name: cache
    restart: unless-stopped
    ports:
      - "${CACHE_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - projectr

  directus:
    image: directus/directus:11.5.1
    container_name: admin
    restart: unless-stopped
    ports:
      - "${DIRECTUS_PORT:-8055}:8055"
    environment:
      DB_CLIENT: "mysql"
      DB_HOST: "${DB_HOST}"
      DB_PORT: "${DB_PORT}"
      DB_DATABASE: "${DB_DATABASE}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
      REDIS_HOST: "${CACHE_HOST}"
      REDIS_PORT: "${CACHE_PORT}"
      CACHE_ENABLED: "true"
      CACHE_AUTO_PURGE: "true"
      CACHE_STORE: "redis"
      KEY: "${DIRECTUS_KEY}"
      SECRET: "${DIRECTUS_SECRET}"
      ADMIN_EMAIL: "${DIRECTUS_ADMIN_EMAIL}"
      ADMIN_PASSWORD: "${DIRECTUS_ADMIN_PASSWORD}"
      WEBSOCKETS_ENABLED: "true"
    volumes:
      - directus_data:/directus:rw
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - projectr
    depends_on:
      - mysql
      - redis

  meilisearch:
    image: getmeili/meilisearch:latest
    container_name: search
    restart: unless-stopped
    ports:
      - "${MEILI_PORT:-7700}:7700"
    environment:
      MEILI_ENV: "${MEILI_ENV:-development}"
      MEILI_MASTER_KEY: "${VITE_MEILI_MASTER_KEY}"
    volumes:
      - meili_data:/meili_data:rw
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - projectr

  meilisync:
    image: long2ice/meilisync:latest
    container_name: meilisync
    restart: unless-stopped
    volumes:
      - meilisync_data:/meilisync:rw
      - ./docker/meilisync/config.yml:/meilisync/config.yml:ro
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - projectr
    depends_on:
      - mysql
      - redis
      - meilisearch

  meilisync-admin:
    image: ghcr.io/long2ice/meilisync-admin/meilisync-admin
    container_name: meilisync-admin
    restart: unless-stopped
    ports:
      - "${MEILISYNC_PORT:-8000}:8000"
    environment:
      REDIS_URL: redis://${CACHE_HOST}:${CACHE_PORT}/0
      DB_URL: mysql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_DATABASE}
      SECRET_KEY: "${VITE_MEILI_MASTER_KEY}"
      SENTRY_DSN: "${SENTRY_DSN}"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - projectr
    depends_on:
      - meilisync

  nginx:
    image: nginx:alpine
    container_name: proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - projectr
    depends_on:
      - directus
      - meilisearch
      - meilisync
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      timeout: 10s
      retries: 3

volumes:
  redis_data:
    driver: local
  mysql_data:
    driver: local
  directus_data:
    driver: local
  meili_data:
    driver: local
  meilisync_data:
    driver: local
  certbot_data:
    driver: local

networks:
  projectr:
    driver: bridge
